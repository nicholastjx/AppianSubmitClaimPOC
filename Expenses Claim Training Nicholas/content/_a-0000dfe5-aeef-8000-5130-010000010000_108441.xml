<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e008-511e-8000-5130-010000010000_154654</versionUuid>
    <rule>
        <name>AT_myTasksReport_Nicholas</name>
        <uuid>_a-0000dfe5-aeef-8000-5130-010000010000_108441</uuid>
        <description></description>
        <parentUuid>_a-0000dfe5-aeef-8000-5130-010000010000_108323</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>load(
  local!pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
    startIndex: 1,
    batchSize: 5
  ),
  local!configuredFormatting,
  with(
    local!report: a!queryProcessAnalytics(
      report: #"_a-0000dfe5-aeef-8000-5130-010000010000_108440",
      query: #"SYSTEM_SYSRULES_query"(
        pagingInfo: local!pagingInfo
      )
    ),
    #"SYSTEM_SYSRULES_gridField"(
      label: local!report.name,
      instructions: local!report.description,
      totalCount: local!report.totalCount,
      columns: {
        #"SYSTEM_SYSRULES_forEach"(
          items: local!report.columnConfigs,
          expression: with(
            local!columnData: index(
              local!report.data,
              fv!item.field,
              {}
            ),
            local!columnDataCount: count(
              local!columnData
            ),
            #"SYSTEM_SYSRULES_gridTextColumn"(
              label: fv!item.label,
              field: fv!item.field,
              data: if(
                local!columnDataCount &gt; 0,
                #"SYSTEM_SYSRULES_forEach"(
                  items: local!columnData,
                  expression: if(
                    /* exact(local!columnData,"TASK_STATUS"), */
                    local!configuredFormatting = "TASK_STATUS",
                    index(
                      {
                        "Assigned",
                        "Accepted",
                        "Completed",
                        "Not Started",
                        "Cancelled",
                        "Paused",
                        "Unattended",
                        "Aborted",
                        "Cancelled By Exception",
                        "Submitted",
                        "Running",
                        "Error"
                      },
                      /*
* Task status ids start with 0, so add one to reach the first index 
*/
                      tointeger(
                        index(
                          local!columnData,
                          fv!item + 1,
                          - 1
                        )
                      ),
                      "Other"
                    ),
                    tostring(
                      fv!item
                    )
                  )
                ),
                {}
              ),
              links: if(
                fv!item.configuredDrilldown = "TASK_DETAILS",
                #"SYSTEM_SYSRULES_forEach"(
                  items: index(
                    local!report.data,
                    fv!item.drilldownField,
                    {}
                  ),
                  expression: #"SYSTEM_SYSRULES_processTaskLink"(
                    task: fv!item
                  )
                ),
                null
              )
            )
          )
        )
      },
      value: local!pagingInfo,
      saveInto: local!pagingInfo
    )
  )
)</definition>
        <metadataExpr></metadataExpr>
        <preferredEditor>interface</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <history>
        <historyInfo versionUuid="_a-0000e008-511e-8000-5130-010000010000_154654"/>
    </history>
</contentHaul>
